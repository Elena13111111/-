# Занятие 20. Хеширование. Hash
# - hash
# - Правило хешей
# - Зачем нужны хеши
# - Для изменяемых объектов
# - Как устроен словарь. Колизии
# - __eq__ и __hash__
# - Объект в ключ словаря

# нельзя Хешировать Словарь{} и Список []. Они явл-ся Изменяемые.
# Можно Хешировать : Строки и Числа. Они Не Изменяемые.
# Хеш нужен для ускоренной работы, он сравнивает хеш одного объекта и другого.
# Метод __eq__ нужно задавать какие-то конкретные параметры для сравнения, а их может быть много.
# 1.- hash- это методика, кот.позволяет оптимизировать нашу программу. Это число, кот. присваиваеться какому-то объекту.

# print( hash(1))
# print( hash(2456))
# print(hash('3'))
# print(hash('a'))
# >1
# >2456
# >-3156914111490196548   -> всегда разный результат цифр
# >-7016614042218412771    -> всегда разный результат цифр
# ------------------
# 2.- Правило хешей:
#   1. У одинаковых обектов -> 99% одинаковый Хеш.(но есть очень маленький процент, что у двух разных объектов могут совпасть одинаковый Хеш)

# print(hash('Петр'))
# print(hash('Петр'))
# print(hash('Петр'))
# print(hash('Петр'))
# print(hash('Вася'))
# >8923014564802004371
# >8923014564802004371
# >8923014564802004371
# >8923014564802004371
# >-4530726590083286761

class Dog:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    # хеш -сравнение хеширование
    def __hash__(self):
        return hash((self.name, self.age)) #наше хеширование завровачиваем в tuple
#сравнение имени и возраста
    def __eq__(self, other):
        return self.age == other.age and self.name == other.name

dog1 = Dog('Шарик', 2)
dog2 = Dog('Шарик', 5)
dog3 = Dog('Шарик', 5)
print(hash(dog1))
print(hash(dog2))
print(hash(dog3))
# >85603852025
# 2338621936613546285  при методе __hash__ происходит сравнение по хешировании, и прога понимает что 2 объекта одинаковые, и ложит в один хеш
# 2338621936613546285  при методе __hash__ происходит сравнение по хешировании
print(dog1 == dog2)  #они не равны, т.к. хеш разный
# # >False
print(dog2 == dog3) # исп-уем метод __eq__ для сравнения имени и возраста
# True
# ===================

